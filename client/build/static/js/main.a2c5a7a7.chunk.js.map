{"version":3,"sources":["redux/reducers/scores/types.ts","redux/reducers/scores/reducers.ts","redux/reducers/index.ts","redux/store.ts","components/Players.tsx","api/score/parser.ts","api/score/index.ts","components/game/TeamItem.tsx","components/game/GameStatus.tsx","utils/ArrowButton.tsx","formatters/nameFormatter.ts","components/game/GameTopPlayers.tsx","components/game/TeamTopPlayers.tsx","components/game/PlayerInfoCarousel.tsx","components/game/GameCard.tsx","components/game/NationTopPlayers.tsx","formatters/dateFormatter.ts","containers/GameCardContainer.tsx","redux/reducers/scores/actions.ts","components/common/CustomDropDown.tsx","components/common/DatePicker.tsx","containers/SelectionBarContainer.tsx","components/Scores.tsx","components/Teams.tsx","App.tsx","index.tsx"],"names":["SET_NATIONALITY","SET_DATE","initialState","selectedDate","today","Date","yesterday","setDate","getDate","getDefaultDate","selectedNationality","combineReducers","selections","state","action","type","payload","createStore","rootReducer","Players","props","parseResponse","games","a","g","i","length","homeTeam","id","teams","home","team","name","abbreviation","awayTeam","away","e","scoringPlays","points","getPointsFromGame","plays","homePoints","players","Map","awayPoints","forEach","p","updatePlayers","homeResult","Array","from","values","current","get","player","pointsPlayer","updatePointsPlayer","playerType","createPointsPlayer","set","scoringPlayer","stats","goals","assists","findScoresByDate","date","axios","process","response","data","result","success","err","message","TeamItem","records","className","src","alt","teamName","leagueRecord","wins","losses","ot","GameStatus","info","homeScore","awayScore","status","minutes","getMinutes","toString","getHours","displayHours","startTime","ArrowButton","onClick","orientation","toLowerCase","formatFullName","arr","split","StatsPlayer","fullName","ConnectedGameTopPlayers","connect","React","useState","showMore","setShowMore","useEffect","calculatePoints","sort","p1","p2","nationality","slice","map","renderStatsPlayers","LeaderPlayer","value","category","ConnectedTeamTopPlayers","console","log","leaders","person","leaderCategory","PlayerInfoCarousel","pageId","setPageId","homeAbbr","homeLeaders","awayAbbr","awayLeaders","GameCard","game","score","detailedState","gameDate","teamLeaders","loading","setLoading","nationTop","setNationTop","parseNationPlayers","useCallback","scores","push","c","dateDisplayOptions","weekday","day","month","dateToQueryFormat","amt","to","res","toISOString","dateToDisplayFormat","amount","newDate","toLocaleDateString","GameCardContainer","setScores","error","setError","getScoresWithDate","timer","setTimeout","clearTimeout","setNewDate","dateInMs","ConnectedCustomDropDown","dispatch","useDispatch","xmlns","viewBox","d","fill","fillRule","onChange","selection","target","options","header","content","ConnectedDatePicker","prevDay","setPreviousDay","nextDay","setNextDay","SelectionBarContainer","Scores","Teams","setTeams","getTeams","t","App","exact","path","component","ReactDOM","render","store","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.a2c5a7a7.chunk.js","sourcesContent":["export interface SelectedDate {\r\n  date: Date;\r\n}\r\n\r\nexport interface SelectedNationality {\r\n  selection: string;\r\n}\r\n\r\nexport interface SelectionsState {\r\n  selectedDate: Date;\r\n  selectedNationality: string;\r\n}\r\n\r\nexport const SET_NATIONALITY = \"SET_NATIONALITY\";\r\nexport const SET_DATE = \"SET_DATE\";\r\n\r\ninterface SetSelectedNationalityAction {\r\n  type: typeof SET_NATIONALITY;\r\n  payload: string;\r\n}\r\n\r\ninterface SetSelectedDateAction {\r\n  type: typeof SET_DATE;\r\n  payload: Date;\r\n}\r\nexport type SelectionActionTypes = SetSelectedNationalityAction | SetSelectedDateAction;\r\n","import { SelectionsState, SelectionActionTypes, SET_NATIONALITY, SET_DATE } from \"./types\";\r\n\r\nconst getDefaultDate = (): Date => {\r\n  const today = new Date();\r\n  const yesterday = new Date(today);\r\n\r\n  yesterday.setDate(yesterday.getDate() - 1);\r\n  return yesterday;\r\n};\r\n\r\nconst initialState: SelectionsState = {\r\n  selectedDate: getDefaultDate(),\r\n  selectedNationality: \"\",\r\n};\r\n\r\nexport const selectionReducer = (\r\n  state: SelectionsState = initialState,\r\n  action: SelectionActionTypes\r\n): SelectionsState => {\r\n  switch (action.type) {\r\n    case SET_NATIONALITY:\r\n      return {\r\n        ...state,\r\n        selectedNationality: action.payload,\r\n      };\r\n    case SET_DATE:\r\n      return {\r\n        ...state,\r\n        selectedDate: action.payload,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { selectionReducer } from \"./scores/reducers\";\r\n\r\nexport default combineReducers({\r\n  selections: selectionReducer,\r\n});\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nexport default createStore(rootReducer);\r\n","import React from \"react\";\r\n\r\ninterface Props {}\r\n\r\nexport const Players = (props: Props) => {\r\n  return <div>Players!</div>;\r\n};\r\n","import {\r\n  Games,\r\n  Points,\r\n  PointsTeam,\r\n  TeamDetailsShort,\r\n  ScoringPlays,\r\n  PointsPlayer,\r\n  ScoringPlayer,\r\n  Stats,\r\n  PointsTeamResult,\r\n} from \"./interface\";\r\n\r\nexport const parseResponse = async (games: Games[]): Promise<Games[]> => {\r\n  let g: Games[] = games;\r\n  for (let i = 0; i < games.length; i++) {\r\n    const homeTeam: TeamDetailsShort = {\r\n      id: games[i].teams.home.team.id,\r\n      name: games[i].teams.home.team.name,\r\n      abbreviation: games[i].teams.home.team.abbreviation,\r\n    };\r\n    const awayTeam: TeamDetailsShort = {\r\n      id: games[i].teams.away.team.id,\r\n      name: games[i].teams.away.team.name,\r\n      abbreviation: games[i].teams.away.team.abbreviation,\r\n    };\r\n    const e = games[i].scoringPlays;\r\n    games[i].points = getPointsFromGame(e, homeTeam, awayTeam);\r\n  }\r\n  return g;\r\n};\r\n\r\nconst getPointsFromGame = (plays: ScoringPlays[], home: TeamDetailsShort, away: TeamDetailsShort): Points => {\r\n  let homePoints: PointsTeam = { team: home, players: new Map<number, PointsPlayer>() };\r\n  let awayPoints: PointsTeam = { team: away, players: new Map<number, PointsPlayer>() };\r\n  plays.forEach((p) => {\r\n    if (p.team.id === homePoints.team.id) {\r\n      updatePlayers(homePoints.players, p.players);\r\n    } else {\r\n      updatePlayers(awayPoints.players, p.players);\r\n    }\r\n  });\r\n\r\n  let homeResult: PointsTeamResult = { team: home, players: Array.from(homePoints.players.values()) };\r\n  let awayResult: PointsTeamResult = { team: away, players: Array.from(awayPoints.players.values()) };\r\n\r\n  let res: Points = { away: awayResult, home: homeResult };\r\n  return res;\r\n};\r\n\r\nconst updatePlayers = (current: Map<number, PointsPlayer>, payload: ScoringPlayer[]): void => {\r\n  payload.forEach((p) => {\r\n    if (!current.get(p.player.id)) {\r\n      if (p.playerType === \"Goalie\") return;\r\n      let pointsPlayer: PointsPlayer = createPointsPlayer(p);\r\n      current.set(p.player.id, pointsPlayer);\r\n    } else {\r\n      let pointsPlayer: PointsPlayer = current.get(p.player.id);\r\n      updatePointsPlayer(pointsPlayer, p);\r\n    }\r\n  });\r\n};\r\n\r\nconst updatePointsPlayer = (pointsPlayer: PointsPlayer, scoringPlayer: ScoringPlayer): void => {\r\n  if (scoringPlayer.playerType === \"Scorer\") {\r\n    pointsPlayer.stats.goals++;\r\n  } else if (scoringPlayer.playerType === \"Assist\") {\r\n    pointsPlayer.stats.assists++;\r\n  }\r\n};\r\n\r\nconst createPointsPlayer = (p: ScoringPlayer): PointsPlayer => {\r\n  let stats: Stats = { goals: 0, assists: 0 };\r\n\r\n  if (p.playerType === \"Scorer\") {\r\n    stats.goals++;\r\n  } else if (p.playerType === \"Assist\") {\r\n    stats.assists++;\r\n  }\r\n\r\n  let result: PointsPlayer = { player: p.player, stats: stats };\r\n  return result;\r\n};\r\n","import axios from \"axios\";\r\nimport { ScoreResponse } from \"./interface\";\r\nimport { parseResponse } from \"./parser\";\r\n\r\nexport const findScoresByDate = async (date: string): Promise<ScoreResponse> => {\r\n  try {\r\n    const response = await axios.get(process.env.REACT_APP_API_URL + `/scores/${date}`);\r\n    const result: any = await parseResponse(response.data.data);\r\n    return { success: response.data.success, data: result };\r\n  } catch (error) {\r\n    const err = {\r\n      success: false,\r\n      data: error.message,\r\n    };\r\n    return err;\r\n  }\r\n};\r\n","import React from \"react\";\r\ninterface Props {\r\n  team: any;\r\n}\r\n\r\ninterface LeagueRecord {\r\n  wins: number;\r\n  losses: number;\r\n  ot: number;\r\n}\r\n\r\nexport const TeamItem = (props: Props) => {\r\n  const displayLeagueRecord = (records: LeagueRecord) => {\r\n    return (\r\n      <div>\r\n        <p className=\"text-gray-500 text-sm\">\r\n          {records.wins}-{records.losses}-{records.ot}\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (!props.team) return;\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-32 \">\r\n      <div className=\"flex justify-center items-center \">\r\n        <i className=\"w-16 \">\r\n          <img\r\n            src={\r\n              process.env.REACT_APP_API_URL + `/images/${props.team.team.id}`\r\n            }\r\n            alt=\"\"\r\n          ></img>\r\n        </i>\r\n      </div>\r\n      <div className=\"mt-2 text-center leading-none text-current flex flex-col justify-end box-border\">\r\n        <p className=\"font-normal\">{props.team.team.teamName}</p>\r\n        {displayLeagueRecord(props.team.leagueRecord)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { GameStatusInfo } from \"./interfaces/interface\";\r\n\r\ninterface Props {\r\n  info: GameStatusInfo;\r\n}\r\n\r\nexport const GameStatus = (props: Props) => {\r\n  const displayHours = (date: string): string => {\r\n    const from: Date = new Date(date);\r\n    let minutes: string = \"\";\r\n    if (from.getMinutes() === 0) {\r\n      minutes = \"00\";\r\n    } else {\r\n      minutes = from.getMinutes().toString();\r\n    }\r\n\r\n    const result: string = `${from.getHours() < 10 ? \"0\" : \"\"}${from.getHours()}:${minutes}`;\r\n\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-between w-40 font-medium\">\r\n      <h1 className={`text-2xl ${props.info.homeScore > props.info.awayScore ? \"\" : \"text-gray-400\"}`}>\r\n        {props.info.homeScore}\r\n      </h1>\r\n      <div className=\"flex flex-col justify-center items-center\">\r\n        <h4 className=\"\">{props.info.status}</h4>\r\n        {props.info.status !== \"Final\" ? (\r\n          <h5 className=\"font-normal text-gray-400\">{displayHours(props.info.startTime)}</h5>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n      <h1 className={`text-2xl ${props.info.awayScore > props.info.homeScore ? \"\" : \"text-gray-400\"}`}>\r\n        {props.info.awayScore}\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\ninterface Props {\r\n  orientation: string;\r\n  onClick?: (e: any) => void;\r\n}\r\n\r\nexport const ArrowButton = (props: Props) => {\r\n  return (\r\n    <button\r\n      className=\"m-0 bg-gray-300 hover:bg-gray-400 text-gray-800 font-medium py-1 px-2 rounded focus:outline-none max-h-9 flex\"\r\n      onClick={props.onClick}\r\n    >\r\n      <span>{props.orientation.toLowerCase() === \"left\" ? <>&#x3c;</> : <>&#x3e;</>}</span>\r\n    </button>\r\n  );\r\n};\r\n","export const formatFullName = (name: string): string => {\r\n  let arr = name.split(\" \");\r\n  return arr.length > 2 ? `${arr[0][0]}.${arr[1]} ${arr[2]}` : `${arr[0][0]}.${arr[1]}`;\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PointsPlayer } from \"../../api/score/interface\";\r\nimport { formatFullName } from \"../../formatters/nameFormatter\";\r\n\r\ninterface Props {\r\n  selectedNationality: string;\r\n  stats: any;\r\n}\r\n\r\ninterface StatsPlayerProps {\r\n  player: PointsPlayer;\r\n}\r\n\r\nconst GameTopPlayers = (props: Props) => {\r\n  const [showMore, setShowMore] = React.useState<boolean>(false);\r\n  React.useEffect(() => {\r\n    setShowMore(false);\r\n  }, [props.stats]);\r\n\r\n  const renderStatsPlayers = () => {\r\n    let arr = props.stats.players\r\n      .sort((p1: PointsPlayer, p2: PointsPlayer) => calculatePoints(p2) - calculatePoints(p1))\r\n      .sort(\r\n        (p1: PointsPlayer, p2: PointsPlayer) =>\r\n          (p2.player.nationality === props.selectedNationality ? 1 : -1) -\r\n          (p1.player.nationality === props.selectedNationality ? 1 : -1)\r\n      );\r\n    return (\r\n      <>\r\n        {arr.length > 0 ? (\r\n          arr.slice(0, showMore ? arr.length : 4).map((p, id) => (\r\n            <div className={`${p.player.nationality === props.selectedNationality ? \"font-bold\" : \"\"}`} key={id}>\r\n              <StatsPlayer player={p} />\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div>none</div>\r\n        )}\r\n        {arr.length > 4 && !showMore ? (\r\n          <button\r\n            onClick={() => setShowMore(true)}\r\n            className=\"text-xs text-gray-900 hover:text-pink-600 focus:outline-none\"\r\n          >\r\n            more...\r\n          </button>\r\n        ) : null}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const calculatePoints = (p: PointsPlayer): number => {\r\n    const result = p.stats.assists + p.stats.goals;\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <div className=\" text-sm flex p-1 ml-1\">\r\n      <div className=\"text-gray-800 font-medium flex self-center content-center\">{props.stats.team.abbreviation}</div>\r\n      <div className=\"ml-2 w-auto font-medium text-gray-500 flex flex-col self-center overflow-auto max-h-28\">\r\n        {renderStatsPlayers()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const StatsPlayer = (props: StatsPlayerProps) => {\r\n  return (\r\n    <div>\r\n      {formatFullName(props.player.player.fullName)}: {props.player.stats.goals}+{props.player.stats.assists}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedNationality: state.selections.selectedNationality,\r\n  };\r\n};\r\n\r\nconst ConnectedGameTopPlayers = connect(mapStateToProps)(GameTopPlayers);\r\nexport default ConnectedGameTopPlayers;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { formatFullName } from \"../../formatters/nameFormatter\";\r\n\r\ninterface Props {\r\n  selectedNationality: string;\r\n  abbreviation: string;\r\n  leaders: any[];\r\n}\r\n\r\ninterface PlayerProps {\r\n  name: string;\r\n  category: string;\r\n  value: string;\r\n}\r\n\r\nconst TeamTopPlayers = (props: Props) => {\r\n  React.useEffect(() => {}, [props.selectedNationality]);\r\n  console.log(props.leaders);\r\n\r\n  if (!props.leaders) return <>N/A</>;\r\n  return (\r\n    <div className=\" text-sm flex p-1 ml-1\">\r\n      <div className=\"text-gray-800 font-medium\">{props.abbreviation}</div>\r\n      <div className=\"ml-2 w-auto font-medium text-gray-500\">\r\n        <LeaderPlayer\r\n          name={props.leaders[0].leaders[0].person.fullName}\r\n          category={props.leaders[0].leaderCategory}\r\n          value={props.leaders[0].leaders[0].value}\r\n        />\r\n        <LeaderPlayer\r\n          name={props.leaders[1].leaders[0].person.fullName}\r\n          category={props.leaders[1].leaderCategory}\r\n          value={props.leaders[1].leaders[0].value}\r\n        />\r\n        <LeaderPlayer\r\n          name={props.leaders[2].leaders[0].person.fullName}\r\n          category={props.leaders[2].leaderCategory}\r\n          value={props.leaders[2].leaders[0].value}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LeaderPlayer = (props: PlayerProps) => {\r\n  return (\r\n    <div>\r\n      {formatFullName(props.name)}: {props.value} {props.category}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedNationality: state.selections.selectedNationality,\r\n  };\r\n};\r\n\r\nconst ConnectedTeamTopPlayers = connect(mapStateToProps)(TeamTopPlayers);\r\nexport default ConnectedTeamTopPlayers;\r\n","import React from \"react\";\r\nimport { ArrowButton } from \"../../utils/ArrowButton\";\r\nimport ConnectedGameTopPlayers from \"./GameTopPlayers\";\r\nimport ConnectedTeamTopPlayers from \"./TeamTopPlayers\";\r\n\r\ninterface Props {\r\n  homeLeaders?: any;\r\n  awayLeaders?: any;\r\n  homeAbbr?: string;\r\n  awayAbbr?: string;\r\n  points?: any;\r\n}\r\n\r\nexport const PlayerInfoCarousel = (props: Props) => {\r\n  const [pageId, setPageId] = React.useState<number>(0);\r\n\r\n  const displayComponent = () => {\r\n    if (pageId === 0) {\r\n      return (\r\n        <div className=\"flex justify-center flex-row p-1\">\r\n          <ConnectedTeamTopPlayers abbreviation={props.homeAbbr} leaders={props.homeLeaders} />\r\n          <ConnectedTeamTopPlayers abbreviation={props.awayAbbr} leaders={props.awayLeaders} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"flex justify-center flex-row p-1\">\r\n          <ConnectedGameTopPlayers stats={props.points.home} />\r\n          <ConnectedGameTopPlayers stats={props.points.away} />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const prevComponent = () => {\r\n    setPageId(1);\r\n  };\r\n\r\n  const nextComponent = () => {\r\n    setPageId(0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex w-full justify-between items-center mx-2\">\r\n      <ArrowButton onClick={prevComponent} orientation=\"left\" />\r\n      <div className=\"w-full justify-center flex\">{displayComponent()}</div>\r\n      <ArrowButton onClick={nextComponent} orientation=\"right\" />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Games } from \"../../api/score/interface\";\r\nimport { TeamItem } from \"../game/TeamItem\";\r\nimport { GameStatus } from \"./GameStatus\";\r\nimport { PlayerInfoCarousel } from \"./PlayerInfoCarousel\";\r\n\r\ninterface Props {\r\n  game: Games;\r\n}\r\n\r\nexport const GameCard = (props: Props) => {\r\n  React.useEffect(() => {\r\n    //console.log(props.game.points);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex transition-all bg-gray-100 shadow-lg mb-3 md:rounded justify-center items-center h-48 overflow-auto\">\r\n      <div className=\"flex justify-center items-center content-center w-full\">\r\n        <TeamItem team={props.game.teams.home}></TeamItem>\r\n        <div>\r\n          <GameStatus\r\n            info={{\r\n              homeScore: props.game.teams.home.score,\r\n              awayScore: props.game.teams.away.score,\r\n              status: props.game.status.detailedState,\r\n              startTime: props.game.gameDate,\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TeamItem team={props.game.teams.away} />\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"hidden lg:hidden md:flex w-full bg-red-300\">medium</div> */}\r\n      <div className=\"hidden lg:flex w-full\">\r\n        <PlayerInfoCarousel\r\n          points={props.game.points}\r\n          homeLeaders={props.game.teams.home.team.teamLeaders}\r\n          awayLeaders={props.game.teams.away.team.teamLeaders}\r\n          homeAbbr={props.game.teams.home.team.abbreviation}\r\n          awayAbbr={props.game.teams.away.team.abbreviation}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PointsPlayer } from \"../../api/score/interface\";\r\n\r\ninterface Props {\r\n  selectedNationality: string;\r\n  selectedDate: Date;\r\n  scores: any;\r\n}\r\n\r\nconst NationTopPlayers = (props: Props) => {\r\n  const [loading, setLoading] = React.useState<boolean>(false);\r\n  const [nationTop, setNationTop] = React.useState<PointsPlayer[]>();\r\n\r\n  // can be improved?\r\n  const parseNationPlayers = React.useCallback(async (): Promise<void> => {\r\n    let arr: PointsPlayer[] = [];\r\n    props.scores.forEach((game) => {\r\n      game.points.away.players.forEach((p: PointsPlayer) => {\r\n        if (p.player.nationality === props.selectedNationality) {\r\n          arr.push(p);\r\n        }\r\n      });\r\n      game.points.home.players.forEach((p: PointsPlayer) => {\r\n        if (p.player.nationality === props.selectedNationality) {\r\n          arr.push(p);\r\n        }\r\n      });\r\n    });\r\n    arr.sort(\r\n      (p1: PointsPlayer, p2: PointsPlayer) => p2.stats.goals + p2.stats.assists - (p1.stats.goals + p1.stats.assists)\r\n    );\r\n    setNationTop(arr);\r\n  }, [props.scores, props.selectedNationality]);\r\n\r\n  React.useEffect(() => {\r\n    setLoading(true);\r\n    parseNationPlayers();\r\n    setLoading(false);\r\n  }, [props.selectedDate, props.scores, parseNationPlayers]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"animate-pulse spinner flex container justify-center items-center content-center p-2 my-4 h-64\">\r\n        Loading...\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"flex w-full flex-wrap justify-center mb-2\">\r\n        {nationTop && nationTop.length > 0 ? (\r\n          nationTop.slice(0, 10).map((p: PointsPlayer, c: number) => (\r\n            <div className=\"min-w-2/4 p-2 m-2 bg-gray-100 shadow-lg md:rounded text-sm\" key={p.player.id}>\r\n              {c + 1}. {p.player.fullName} {p.stats.goals}+{p.stats.assists}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div>No players for selected country :(</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedNationality: state.selections.selectedNationality,\r\n    selectedDate: state.selections.selectedDate,\r\n  };\r\n};\r\n\r\nconst ConnectedGameTopPlayers = connect(mapStateToProps)(NationTopPlayers);\r\nexport default ConnectedGameTopPlayers;\r\n","const dateDisplayOptions: Intl.DateTimeFormatOptions = { weekday: \"long\", day: \"numeric\", month: \"short\" };\r\n\r\nexport const dateToQueryFormat = (date: Date, amt: number = 0): string => {\r\n  let to: number = new Date(date).setDate(new Date(date).getDate() + amt);\r\n  let res: string = new Date(to).toISOString().slice(0, 10);\r\n  return res;\r\n};\r\n\r\nexport const dateToDisplayFormat = (date: Date, amount: number): string => {\r\n  let newDate: Date = new Date(date);\r\n  newDate.setDate(date.getDate() + amount);\r\n  let result: string = newDate.toLocaleDateString(\"en-us\", dateDisplayOptions);\r\n  return result;\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { findScoresByDate } from \"../api/score\";\r\nimport { ScoreResponse } from \"../api/score/interface\";\r\nimport { GameCard } from \"../components/game/GameCard\";\r\nimport ConnectedNationTopPlayers from \"../components/game/NationTopPlayers\";\r\nimport { dateToQueryFormat } from \"../formatters/dateFormatter\";\r\n\r\ninterface Props {\r\n  selectedDate: Date;\r\n}\r\n\r\nconst Container = (props: Props) => {\r\n  const [loading, setLoading] = React.useState<boolean>(true);\r\n  const [scores, setScores] = React.useState<any>(null);\r\n  const [error, setError] = React.useState(null);\r\n\r\n  const getScoresWithDate = React.useCallback(async (): Promise<void> => {\r\n    const response: ScoreResponse = await findScoresByDate(\r\n      dateToQueryFormat(props.selectedDate)\r\n    );\r\n    if (response.success) {\r\n      setScores(response.data);\r\n    } else {\r\n      setError(response.data);\r\n    }\r\n  }, [props.selectedDate]);\r\n\r\n  React.useEffect(() => {\r\n    if (!props.selectedDate) return;\r\n    setLoading(true);\r\n    const timer = setTimeout(() => {\r\n      getScoresWithDate();\r\n      setLoading(false);\r\n    }, 1000);\r\n    return () => clearTimeout(timer);\r\n  }, [getScoresWithDate, props.selectedDate]);\r\n\r\n  if (loading || !scores) {\r\n    return (\r\n      <div className=\"flex flex-col overflow-auto sm:w-5/6 w-full my-48\">\r\n        <div className=\"flex hover:bg-pink-200 transition-all bg-gray-100 shadow-lg mb-3 md:rounded justify-center items-center h-48\"></div>\r\n        <div className=\"flex hover:bg-pink-200 transition-all bg-gray-100 shadow-lg mb-3 md:rounded justify-center items-center h-48\"></div>\r\n        <div className=\"flex hover:bg-pink-200 transition-all bg-gray-100 shadow-lg mb-3 md:rounded justify-center items-center h-48\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col overflow-auto sm:w-5/6 w-full \">\r\n      {scores || loading ? (\r\n        <>\r\n          <ConnectedNationTopPlayers\r\n            scores={scores}\r\n          ></ConnectedNationTopPlayers>\r\n          {scores.map((g, id) => (\r\n            <div key={id}>\r\n              <GameCard game={g} />\r\n            </div>\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <div>Loading...</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedDate: state.selections.selectedDate,\r\n  };\r\n};\r\n\r\nconst GameCardContainer = connect(mapStateToProps)(Container);\r\nexport default GameCardContainer;\r\n","import { SelectionActionTypes, SET_DATE, SET_NATIONALITY } from \"./types\";\r\n\r\nexport const setNationality = (selection: string): SelectionActionTypes => {\r\n  return {\r\n    type: SET_NATIONALITY,\r\n    payload: selection,\r\n  };\r\n};\r\n\r\nexport const setPreviousDay = (date: Date): SelectionActionTypes => {\r\n  const prevDay: Date = setNewDate(date, -1);\r\n  return {\r\n    type: SET_DATE,\r\n    payload: prevDay,\r\n  };\r\n};\r\n\r\nexport const setNextDay = (date: Date): SelectionActionTypes => {\r\n  const nextDay: Date = setNewDate(date, 1);\r\n  return {\r\n    type: SET_DATE,\r\n    payload: nextDay,\r\n  };\r\n};\r\n\r\nconst setNewDate = (date: Date, amt: number): Date => {\r\n  let dateInMs: number = new Date(date).setDate(new Date(date).getDate() + amt);\r\n  return new Date(dateInMs);\r\n};\r\n","import React from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { setNationality } from \"../../redux/reducers/scores/actions\";\r\nimport { DropDownOptions } from \"./interfaces/interface\";\r\n\r\ninterface Props {\r\n  options: DropDownOptions;\r\n  selectedNationality: string;\r\n}\r\n\r\nconst CustomDropDown = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\" \">\r\n      <div className=\"relative inline-flex \">\r\n        <svg\r\n          className=\"w-2 h-2 absolute top-0 right-0 m-3 pointer-events-none font-mono\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 412 232\"\r\n        >\r\n          <path\r\n            d=\"M206 171.144L42.678 7.822c-9.763-9.763-25.592-9.763-35.355 0-9.763 9.764-9.763 25.592 0 35.355l181 181c4.88 4.882 11.279 7.323 17.677 7.323s12.796-2.441 17.678-7.322l181-181c9.763-9.764 9.763-25.592 0-35.355-9.763-9.763-25.592-9.763-35.355 0L206 171.144z\"\r\n            fill=\"#648299\"\r\n            fillRule=\"nonzero\"\r\n          />\r\n        </svg>\r\n        <form className=\"text-sm transition-all \">\r\n          <select\r\n            value={props.selectedNationality}\r\n            onChange={(e) => dispatch(setNationality(e.target.value))}\r\n            className=\"bg-gray-100 h-8 pl-3 pr-8 border-none active:border-none focus:outline-none appearance-none cursor-pointer\"\r\n          >\r\n            <option value=\"\" className=\" truncate md:overflow-clip\">\r\n              {props.options.header}\r\n            </option>\r\n            {props.options.content.map((c, i) => (\r\n              <option key={i} value={c}>\r\n                {c}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedNationality: state.selections.selectedNationality,\r\n  };\r\n};\r\n\r\nconst ConnectedCustomDropDown = connect(mapStateToProps)(CustomDropDown);\r\nexport default ConnectedCustomDropDown;\r\n","import React from \"react\";\r\nimport { setPreviousDay, setNextDay } from \"../../redux/reducers/scores/actions\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { dateToDisplayFormat } from \"../../formatters/dateFormatter\";\r\ninterface Props {\r\n  selectedDate: Date;\r\n}\r\n\r\nconst DatePicker = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      {props.selectedDate ? (\r\n        <div className=\"flex justify-evenly w-full h-full\">\r\n          <div className=\"sm:w-4/6 w-full flex justify-evenly text-sm md:text-base\">\r\n            <div className=\"hover:border-pink-700 border-b-2 border-transparent\">\r\n              <button\r\n                className=\"focus:outline-none h-full\"\r\n                onClick={(e) => dispatch(setPreviousDay(props.selectedDate))}\r\n              >\r\n                {dateToDisplayFormat(props.selectedDate, -1)}\r\n              </button>\r\n            </div>\r\n            <div className=\"border-b-2 border-pink-700 \">\r\n              <button className=\"focus:outline-none border-transparent h-full\">\r\n                {dateToDisplayFormat(props.selectedDate, 0)}\r\n              </button>\r\n            </div>\r\n            <div className=\"hover:border-pink-700 border-b-2 border-transparent\">\r\n              <button\r\n                className=\"focus:outline-none h-full border-transparent\"\r\n                onClick={(e) => dispatch(setNextDay(props.selectedDate))}\r\n              >\r\n                {dateToDisplayFormat(props.selectedDate, 1)}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedDate: state.selections.selectedDate,\r\n  };\r\n};\r\n\r\nconst ConnectedDatePicker = connect(mapStateToProps)(DatePicker);\r\nexport default ConnectedDatePicker;\r\n","import React from \"react\";\r\nimport { DropDownOptions } from \"../components/common/interfaces/interface\";\r\nimport { connect } from \"react-redux\";\r\nimport ConnectedCustomDropDown from \"../components/common/CustomDropDown\";\r\nimport ConnectedDatePicker from \"../components/common/DatePicker\";\r\n\r\nconst options: DropDownOptions = {\r\n  header: \"Choose nationality\",\r\n  content: [\"FIN\", \"SWE\", \"CAN\", \"USA\", \"CZE\"],\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst Container = (props: Props) => {\r\n  return (\r\n    <div className=\"flex flex-col overflow-auto sm:w-5/6 w-full sm:my-2\">\r\n      <div className=\" bg-gray-100 shadow rounded h-14 mb-3 flex items-center sm:justify-items-center\">\r\n        <ConnectedCustomDropDown options={options}></ConnectedCustomDropDown>\r\n        <ConnectedDatePicker></ConnectedDatePicker>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedNationality: state.selections.selectedNationality,\r\n  };\r\n};\r\n\r\nconst SelectionBarContainer = connect(mapStateToProps)(Container);\r\nexport default SelectionBarContainer;\r\n","import GameCardContainer from \"../containers/GameCardContainer\";\r\nimport SelectionBarContainer from \"../containers/SelectionBarContainer\";\r\n\r\nexport const Scores = () => {\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center  \">\r\n      <SelectionBarContainer />\r\n      <GameCardContainer />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\ninterface ITeam {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\ninterface Props {}\r\n\r\nexport const Teams = (props: Props) => {\r\n  const [loading, setLoading] = React.useState<boolean>(false);\r\n  const [teams, setTeams] = React.useState<ITeam[]>([]);\r\n\r\n  React.useEffect(() => {\r\n    setLoading(true);\r\n    const getTeams = async (): Promise<void> => {\r\n      try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/teams`);\r\n        setTeams(res.data.data);\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    };\r\n    getTeams();\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  if (!teams && loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {teams.map((t, id) => (\r\n        <div className=\"flex\" key={id}>\r\n          <i className=\"w-10\">\r\n            <img src={`${process.env.REACT_APP_API_URL}/images/` + t.id} alt=\"\"></img>\r\n          </i>\r\n          {t.name}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport { Players } from \"./components/Players\";\nimport { Scores } from \"./components/Scores\";\nimport { Teams } from \"./components/Teams\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"flex flex-1 flex-col h-screen font-mono\">\n        <div className=\"fixed top-0 w-full flex h-24 bg-gray-900 justify-items-center items-center  border-b-2 border-pink-700 text-gray-50 \">\n          <nav className=\"flex flex-auto justify-evenly transition-colors items-center\">\n            <Link to=\"/\">\n              <span className=\"hover:text-gray-400\">Scores</span>\n            </Link>\n\n            <Link to=\"/teams\">\n              <span className=\"hover:text-gray-400\">Teams</span>\n            </Link>\n          </nav>\n        </div>\n        <div className=\"mt-24 overflow-auto flex-col flex-auto items-center justify-center bg-gray-200 sm:p-10\">\n          <Switch>\n            <Route exact path=\"/\" component={Scores} />\n            <Route path=\"/scores\" component={Scores} />\n            <Route path=\"/teams\" component={Teams} />\n            <Route path=\"/players\" component={Players} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.Fragment>\n      <App />\n    </React.Fragment>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}